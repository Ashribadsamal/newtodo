{"version":3,"sources":["redux/reducer.js","components/TodoItem.js","components/DisplayTodos.js","components/Todos.js","App.js","redux/store.js","index.js"],"names":["addTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer","TodoItem","props","updateTodo","removeTodo","completeTodo","inputRef","useRef","motion","li","initial","x","transition","type","duration","animate","whileHover","scale","exit","backgroundColor","className","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","button","whileTap","onClick","focus","style","color","connect","todos","dispatch","addTodo","obj","useState","sort","setSort","AnimatePresence","length","setTodo","Date","selectedDate","handleDateChange","onChange","target","handleChange","utils","DateMomentUtils","DateTimePicker","autoOk","ampm","disableFuture","label","alert","Math","floor","random","App","h1","y","div","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.298ff1e6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst addTodoReducer = createSlice({\r\n  name: \"todos\",\r\n  initialState,\r\n  reducers: {\r\n   \r\n    addTodos: (state, action) => {\r\n      state.push(action.payload);\r\n      return state;\r\n    },\r\n    //remove todos\r\n    removeTodos: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    //update todos\r\n    updateTodos: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          return {\r\n            ...todo,\r\n            item: action.payload.item,\r\n          };\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n    //completed\r\n    completeTodos: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            completed: true,\r\n          };\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTodos,\r\n  removeTodos,\r\n  updateTodos,\r\n  completeTodos,\r\n} = addTodoReducer.actions;\r\nexport const reducer = addTodoReducer.reducer;","import { motion } from \"framer-motion\";\r\nimport React, { useRef } from \"react\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { IoCheckmarkDoneSharp, IoClose } from \"react-icons/io5\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { item, updateTodo, removeTodo, completeTodo } = props;\r\n  // itemdt\r\n  const inputRef = useRef(true);\r\n\r\n  const changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const update = (id, value, e) => {\r\n    if (e.which === 13) {\r\n      //here 13 is key code for enter key\r\n      updateTodo({ id, item: value });\r\n      inputRef.current.disabled = true;\r\n    }\r\n  };\r\n  return (\r\n    <motion.li\r\n      initial={{ x: \"150vw\", transition: { type: \"spring\", duration: 2 } }}\r\n      animate={{ x: 0, transition: { type: \"spring\", duration: 2 } }}\r\n      whileHover={{\r\n        scale: 0.9,\r\n        transition: { type: \"spring\", duration: 0.1 },\r\n      }}\r\n      exit={{\r\n        x: \"-60vw\",\r\n        scale: [1, 0],\r\n        transition: { duration: 0.5 },\r\n        backgroundColor: \"rgba(255,0,0,1)\",\r\n      }}\r\n      key={item.id}\r\n      className=\"card\"\r\n    >\r\n      <textarea\r\n        ref={inputRef}\r\n        disabled={inputRef}\r\n        defaultValue={item.item}\r\n        \r\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n      />\r\n      {/* <textarea\r\n       ref={inputRef}\r\n       disabled={inputRef}\r\n        defaultValue={item.itemdt}\r\n        \r\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n      /> */}\r\n       \r\n      {/* <p>{item.itemdt}</p> */}\r\n      \r\n      <div className=\"btns\"> \r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => changeFocus()}\r\n        >\r\n          \r\n          <AiFillEdit />\r\n        </motion.button>\r\n        {item.completed === false && (\r\n          <motion.button\r\n            whileHover={{ scale: 1.4 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            style={{ color: \"green\" }}\r\n            onClick={() => completeTodo(item.id)}\r\n          >\r\n            <IoCheckmarkDoneSharp />\r\n          </motion.button>\r\n        )}\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          style={{ color: \"red\" }}\r\n          onClick={() => removeTodo(item.id)}\r\n        >\r\n          \r\n          <IoClose />\r\n        </motion.button>\r\n      </div>\r\n      \r\n      \r\n      {item.completed && <span className=\"completed\">done</span>}\r\n    </motion.li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTodos,\r\n  completeTodos,\r\n  removeTodos,\r\n  updateTodos,\r\n} from \"../redux/reducer\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n    removeTodo: (id) => dispatch(removeTodos(id)),\r\n    updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n    completeTodo: (id) => dispatch(completeTodos(id)),\r\n  };\r\n};\r\n\r\nconst DisplayTodos = (props) => {\r\n  const [sort, setSort] = useState(\"active\");\r\n  return (\r\n    <div className=\"displaytodos\">\r\n      <div className=\"buttons\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"active\")}\r\n        >\r\n          Active\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"completed\")}\r\n        >\r\n          Completed\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"all\")}\r\n        >\r\n          All\r\n        </motion.button>\r\n      </div>\r\n      <ul>\r\n        <AnimatePresence>\r\n          {props.todos.length > 0 && sort === \"active\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  item.completed === false && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      // itemdt={item.itemdt}\r\n                      removeTodo={props.removeTodo}\r\n                      updateTodo={props.updateTodo}\r\n                      completeTodo={props.completeTodo}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {/* for completed items */}\r\n          {props.todos.length > 0 && sort === \"completed\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  item.completed === true && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      // itemdt={item.itemdt}\r\n                      removeTodo={props.removeTodo}\r\n                      updateTodo={props.updateTodo}\r\n                      completeTodo={props.completeTodo}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {/* for all items */}\r\n          {props.todos.length > 0 && sort === \"all\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    // itemdt={item.itemdt}\r\n                    removeTodo={props.removeTodo}\r\n                    updateTodo={props.updateTodo}\r\n                    completeTodo={props.completeTodo}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </AnimatePresence>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodos } from \"../redux/reducer\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { motion } from \"framer-motion\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateMomentUtils from '@date-io/moment';\r\nimport {\r\n    // DatePicker,\r\n    // TimePicker,\r\n  DateTimePicker,\r\n  KeyboardDateTimePicker\r\n//   MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n  };\r\n};\r\n\r\nconst Todos = (props) => {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const add = () => {\r\n    if (todo === \"\") {\r\n      alert(\"Input is Empty\");\r\n    } else {\r\n      props.addTodo({\r\n        id: Math.floor(Math.random() * 1000),\r\n        item: todo,\r\n        //  itemdt:selectedDate,\r\n        completed: false,\r\n      });\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n  // console.log(selectedDate._d)\r\n  \r\n  return (\r\n    <div className=\"addTodos\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"todo-input\"\r\n        value={todo}\r\n      />\r\n    \r\n      <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n        {/* <DateTimePicker\r\n            variant=\"inline\"\r\n            label=\"Basic example\"\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n        /> */}\r\n        <DateTimePicker\r\n        autoOk\r\n        ampm={false}\r\n        disableFuture\r\n        value={selectedDate}\r\n        onChange={handleDateChange}\r\n        label=\"24h clock\"\r\n      />\r\n      </MuiPickersUtilsProvider>\r\n      \r\n      <motion.button\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        className=\"add-btn\"\r\n        onClick={() => add()}\r\n      >\r\n        <GoPlus />\r\n      </motion.button>\r\n      \r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import \"./css/main.css\";\nimport DisplayTodos from \"./components/DisplayTodos\";\nimport Todos from \"./components/Todos\";\n\nimport { motion } from \"framer-motion\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <motion.h1\n        initial={{ y: -200 }}\n        animate={{ y: 0 }}\n        transition={{ type: \"spring\", duration: 0.5 }}\n        whileHover={{ scale: 1.1 }}\n      >\n        Todo App\n      </motion.h1>\n      <motion.div\n        initial={{ y: 1000 }}\n        animate={{ y: 0 }}\n        transition={{ type: \"spring\", duration: 1 }}\n      >\n        <Todos />\n        <DisplayTodos />\n      </motion.div>\n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n     <App />\n     </Provider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}